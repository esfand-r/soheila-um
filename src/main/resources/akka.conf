
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = DEBUG
  jvm-exit-on-fatal-error = off
  # Auth token cleaner
  quartz.schedules.AuthTokenCleaner {
    expression = "0 0 */1 * * ?"
    timezone = "UTC"
    description = "cleanup the auth tokens on every hour"
  }

  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  actor {
    serializers {
      java = "akka.serialization.JavaSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }
    serialize-messages = on
    kryo  {
      type = "graph"
      idstrategy = "incremental"
      buffer-size = 4096
      max-buffer-size = -1
      use-manifests = false
      use-unsafe = false
      post-serialization-transformations = "lz4,aes"
      implicit-registration-logging = true
      kryo-trace = true
      resolve-subclasses = true
    }
    serialization-bindings {
      "io.soheila.um.events.PasswordChanged" = kryo
      "io.soheila.um.events.PasswordReset" = kryo
      "io.soheila.um.events.UserActivated" = kryo
      "io.soheila.um.events.UserCreated" = kryo
      "io.soheila.um.events.UserLoggedIn" = kryo
    }
  }
}
